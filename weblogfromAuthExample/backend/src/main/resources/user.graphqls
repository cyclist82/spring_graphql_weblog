# java.util.Date implementation
scalar Date

# java.time.LocalDate implementation
scalar LocalDate

# java.time.LocalDateTime implementation
scalar LocalDateTime

# java.time.LocalTime implementation
scalar LocalTime

enum SortOrder {
    ASC
    DESC
}


type Query {
    users: [User]
    get(id: String!): User
    verify(token: String!): UserAuth!
    login(credentials: CredentialsInput!): UserAuth!
    allPosts: [Post]!
    allPostsSorted(page: Int!, size: Int!, sortOrder: SortOrder!, sortBy: String!): PostsPagedOutput!
}

type Mutation {
    createUser(username: String!, email: String!, password: String!): User!
    update(id: String!, username: String!, email: String!, passwordOld: String!, password: String): User
    delete(id: String!): User!
    createPost(title: String!, text: String!): Post!
}

type User {
    id: ID!
    username: String!
    email: String!
    createdAt: LocalDateTime!
    modifiedAt: LocalDateTime
    posts: [Post]!
}

type UserAuth {
    user: User!
    token: String!
}

input UserInput {
    email: String
    password: String
}

input CredentialsInput {
    email: String!
    password: String!
}

type Post {
    id: ID!
    title: String!
    text: String!
    creator: User!
    createdAt: LocalDateTime!
    lastModifiedAt: LocalDateTime
    lastModifier: User
}

type PostsPagedOutput {
    posts: [Post]!
    amountPages: Int!
}
